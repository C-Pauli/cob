#!/usr/bin/env python3

import os
import yaml
import glob
import argparse
import subprocess

# Provide some config options
parser = argparse.ArgumentParser(description='Start an instance of the COB Server')
parser.add_argument('-c','--config',dest='userConf',action='store',default=None,help=
'Provide a YAML formatted configuration file, if not provided, general Camoco config file is used.')
parser.add_argument('-d','--daemon',dest='daemon',action='store_true',default=False,
help='Run gunicorn as a daemon (allows closing of this terminal).')
parser.add_argument('-k','--kill',dest='kill',action='store_true',default=False,
help='Kill running servers.')
args = parser.parse_args()

# Pull the camoco conf file to find the base dir
camocoConf = yaml.load(open(os.path.expanduser('~/.camoco.conf'),'r'))

# Location of scratch folder
base = os.path.join(camocoConf['options']['basedir'],'web')
os.makedirs(base, exist_ok=True)

if args.kill:
    pids = glob.glob(base+'/*/.pid_*')
    if len(pids) < 1:
        print('No running COBs found')
    else:
        for pid in pids:
            subprocess.run('kill `cat '+pid+'`',shell=True)
            print('Killed: '+pid.split('_')[-1])

else:    
    # Default config values
    opts = {
        'name':'cob',
        'port':50000,
        'threads':4,
        'timeout':300,
        'networks':[],
        'gwas':[],
        'defaults':{
            'logSpacing':True,
            'fdrFilter':True,
            'nodeCutoff':1,
            'edgeCutoff':3.0,
            'fdrCutoff':0.35,
            'windowSize':50000,
            'flankLimit':2,
            'visNeighbors':25,
            'nodeSize':10,
            'snpLevels':3,
            'pCutoff':0.05,
            'minTerm':5,
            'maxTerm':300
        }
    }

    # If there is a config file, use it
    if args.userConf:
        conf = yaml.load(open(args.userConf,'r'))
    elif 'web' in camocoConf:
        conf = camocoConf['web']
    else:
        conf = opts

    # Update any options that were defined
    for key,val in conf.items():
        if key in opts:
            if key == 'defaults':
                for k2,v2 in val.items():
                    if k2 in opts['defaults']:
                        opts['defaults'][k2] = v2
            else:
                opts[key] = val

    # Setup the scratch folder
    opts['scratch'] = os.path.join(base,opts['name'])
    os.makedirs(opts['scratch'], exist_ok=True)
    
    # Make it a daemon if so deemed
    if args.daemon:
        daemon = '--daemon --pid '+os.path.join(opts['scratch'],'.pid_'+opts['name'])
    else:
        daemon = ''

    # Run the server!
    subprocess.run('gunicorn'+
        ' --bind localhost:'+str(opts['port'])+
        ' --threads '+str(opts['threads'])+
        ' --timeout '+str(opts['timeout'])+
        ' --graceful-timeout '+str(opts['timeout'])+
        ' '+daemon+
        ' --env "CONF='+yaml.dump(opts)+'"'+
        ' cob.server:app',shell=True)
